<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>KOKODA的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.kokoda.xyz/"/>
  <updated>2018-12-17T13:18:42.803Z</updated>
  <id>https://www.kokoda.xyz/</id>
  
  <author>
    <name>KOKODA</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C语言技巧记录</title>
    <link href="https://www.kokoda.xyz/C%E8%AF%AD%E8%A8%80%E6%8A%80%E5%B7%A7%E8%AE%B0%E5%BD%95/"/>
    <id>https://www.kokoda.xyz/C语言技巧记录/</id>
    <published>2018-11-30T03:18:45.000Z</published>
    <updated>2018-12-17T13:18:42.803Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C语言不常使用的知识"><a href="#C语言不常使用的知识" class="headerlink" title="C语言不常使用的知识"></a>C语言不常使用的知识</h1><h2 id="在printf-中-p是内存地址的占位符"><a href="#在printf-中-p是内存地址的占位符" class="headerlink" title="在printf()中%p是内存地址的占位符"></a>在<code>printf()</code>中<code>%p</code>是内存地址的占位符</h2><figure class="highlight c hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">//举例</span></span><br><span class="line"><span class="hljs-keyword">int</span> a;</span><br><span class="line"><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%p"</span>,&amp;a);</span><br><span class="line"><span class="hljs-comment">//输出类似这样的东西</span></span><br><span class="line">&gt;&gt; <span class="hljs-number">0x7ffeefeed72c</span></span><br></pre></td></tr></table></figure><h2 id="用递归实现字符串反转"><a href="#用递归实现字符串反转" class="headerlink" title="用递归实现字符串反转"></a>用递归实现字符串反转</h2><figure class="highlight c hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">reverseSentence</span><span class="hljs-params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-keyword">void</span>)</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">    <span class="hljs-built_in">printf</span>(<span class="hljs-string">"输入一个字符串: "</span>);</span><br><span class="line">    reverseSentence();</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">reverseSentence</span><span class="hljs-params">()</span></span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">char</span> c;</span><br><span class="line">    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">"%c"</span>, &amp;c);</span><br><span class="line">    <span class="hljs-keyword">if</span>( c != <span class="hljs-string">'\n'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        reverseSentence();</span><br><span class="line">        <span class="hljs-built_in">printf</span>(<span class="hljs-string">"%c"</span>,c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="用科学计数法表示数字"><a href="#用科学计数法表示数字" class="headerlink" title="用科学计数法表示数字"></a>用科学计数法表示数字</h2><figure class="highlight c hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-built_in">printf</span>(<span class="hljs-string">"%d\n"</span>,<span class="hljs-number">1.2e100</span>);     <span class="hljs-comment">//输出120</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;C语言不常使用的知识&quot;&gt;&lt;a href=&quot;#C语言不常使用的知识&quot; class=&quot;headerlink&quot; title=&quot;C语言不常使用的知识&quot;&gt;&lt;/a&gt;C语言不常使用的知识&lt;/h1&gt;&lt;h2 id=&quot;在printf-中-p是内存地址的占位符&quot;&gt;&lt;a href=&quot;#在
      
    
    </summary>
    
      <category term="学习" scheme="https://www.kokoda.xyz/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习笔记" scheme="https://www.kokoda.xyz/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Python基础</title>
    <link href="https://www.kokoda.xyz/Python%E5%9F%BA%E7%A1%80/"/>
    <id>https://www.kokoda.xyz/Python基础/</id>
    <published>2018-10-27T05:46:33.000Z</published>
    <updated>2019-01-06T05:46:15.031Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/005AdMUbgy1fwmsjzu0h8j30sn0dsdgf.jpg" alt="Python"></p><h1 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h1><ul><li>Python编译器的不同在于编写编译器的代码不同，使用哪种代码开发的编译器即可与哪种代码协作   一般用<font color="#FF0055" style="font-weight:bold">CPython</font></li></ul><h2 id="尝试第一个Python程序"><a href="#尝试第一个Python程序" class="headerlink" title="尝试第一个Python程序"></a>尝试第一个Python程序</h2>  <figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="hljs-string">'Hello World'</span>)</span><br></pre></td></tr></table></figure><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><ul><li><p>和C的变量一样Python的变量不能<font color="#FF0055">数字</font>开头且不能占用<font color="#FF0055">关键字</font></p></li><li><p>Python中不存在常量  但约定俗成用<font color="#FF0055">大写变量</font>代表常量</p></li></ul><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><ul><li><p>Python的注释分<font color="#FF0055">单行注释</font>与<font color="#FF0055">多行注释</font></p><ul><li>单行注释示例</li></ul><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">#我是注释</span></span><br></pre></td></tr></table></figure><ul><li>多行注释示例</li></ul><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-string">'''</span></span><br><span class="line"><span class="hljs-string">我是注释A</span></span><br><span class="line"><span class="hljs-string">我是注释B</span></span><br><span class="line"><span class="hljs-string">等等等</span></span><br><span class="line"><span class="hljs-string">'''</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>  可用 type( ) 来查看数据类型</p><ol><li><p>数字型 <font color="#FF0055">int</font>         <code>可进行 + — * / % 等运算</code><br>&emsp;<font color="#FF0055">int.bit_length</font>用于表示int转化为二进制后的长度</p></li><li><p>字符串型 <font color="#FF0055">str</font>       <code>可进行 + * 运算</code> <code>str + str与str * int</code></p><ul><li><p>可如下表示多行大字符串</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-string">'''</span></span><br><span class="line"><span class="hljs-string">我是大字符串的第一行，</span></span><br><span class="line"><span class="hljs-string">我是大字符串的第二行，</span></span><br><span class="line"><span class="hljs-string">我是大字符串的第三行，</span></span><br><span class="line"><span class="hljs-string">'''</span></span><br></pre></td></tr></table></figure></li><li><p>字符串的索引与切片</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="hljs-string">'ABCDEFGHIJKL'</span></span><br><span class="line"><span class="hljs-comment">#索引</span></span><br><span class="line">s1 = a[<span class="hljs-number">0</span>]          <span class="hljs-comment">#s1 = A</span></span><br><span class="line">s2 = a[<span class="hljs-number">0</span>:<span class="hljs-number">5</span>]       <span class="hljs-comment">#s2 = ABCDE</span></span><br><span class="line">s3 = a[<span class="hljs-number">-3</span>:<span class="hljs-number">-1</span>]    <span class="hljs-comment">#s3 = JK</span></span><br><span class="line">s4 = a[<span class="hljs-number">0</span>:<span class="hljs-number">-1</span>]     <span class="hljs-comment">#s4 = ABCDEFGHIJK</span></span><br><span class="line">S5 = a[<span class="hljs-number">0</span>:]        <span class="hljs-comment">#s5 = ABCDEFGHIJKL</span></span><br><span class="line">s6 = a[:]          <span class="hljs-comment">#s6 = ABCDEFGHIJKL</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>布尔值型 <font color="#FF0055">bool</font>      <code>就两个值True False</code> <code>必须首字母大写</code></p></li></ol><ul><li><p>转换数据类型</p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">age1 = input(<span class="hljs-string">'请输入年龄'</span>) <span class="hljs-comment">#age1此时为str类型</span></span><br><span class="line">age2 = int（input(<span class="hljs-string">'亲输入年龄'</span>)) <span class="hljs-comment">#age2此时为int类型</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="列表，元祖，字典，集合"><a href="#列表，元祖，字典，集合" class="headerlink" title="列表，元祖，字典，集合"></a>列表，元祖，字典，集合</h2><ol><li><p>列表 <font color="#FF0055">[ ]</font> <code>用于存储大量数据，方便读写</code></p></li><li><p>元祖 <font color="#FF0055">( )</font> <code>用于存储大量数据，只可读取</code></p></li><li><p>字典 <font color="#FF0055">{ }</font> <code>字典中的值两两对应，方便读写</code></p></li><li><p>集合 <font color="#FF0055">{ }</font> <code>可进行集合运算操作 交、并、补</code></p></li></ol><p><strong>以上四种数据类型可相互嵌套</strong></p><h2 id="用户交互"><a href="#用户交互" class="headerlink" title="用户交互"></a>用户交互</h2><ul><li><p>input() <code>将输入内容赋给前面变量</code> <code>input的数据类型全为str</code></p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name = input(<span class="hljs-string">'请输入你的名字：'</span>)</span><br><span class="line">age = input(<span class="hljs-string">'请输入你的年龄：'</span>)</span><br><span class="line">print(name,age)</span><br></pre></td></tr></table></figure></li><li><p>格式化输出 <code>可按格式输出，存在占位符</code> <code>相当于C中的printf</code> <code>欲在格式化输出中使用%应写作%%</code></p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">name = input(<span class="hljs-string">'请输入姓名：'</span>)</span><br><span class="line">age = input(<span class="hljs-string">'请输入年龄：'</span>)</span><br><span class="line">height = input(<span class="hljs-string">'请输入身高：'</span>)</span><br><span class="line">msg = <span class="hljs-string">'''</span></span><br><span class="line"><span class="hljs-string">姓名：%s</span></span><br><span class="line"><span class="hljs-string">年龄：%s</span></span><br><span class="line"><span class="hljs-string">身高：%s</span></span><br><span class="line"><span class="hljs-string">我的学习进度为3%%</span></span><br><span class="line"><span class="hljs-string">'''</span> %(name,age,height)</span><br><span class="line"><span class="hljs-comment">#前一个%代表转意 后一个%代表正常输出%</span></span><br><span class="line"><span class="hljs-comment">#也可用%%s 来输出占位符</span></span><br><span class="line">print(msg)</span><br></pre></td></tr></table></figure></li></ul><h2 id="逻辑语句"><a href="#逻辑语句" class="headerlink" title="逻辑语句"></a>逻辑语句</h2><ul><li><p>条件判断语句<font color="#FF0055">if</font> <code>缩进不可省略 用TAB键缩进</code> <code>if语句可嵌套</code></p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">if</span> 条件：</span><br><span class="line">  结果</span><br></pre></td></tr></table></figure><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">if</span> 条件:</span><br><span class="line">  结果<span class="hljs-number">1</span></span><br><span class="line"><span class="hljs-keyword">else</span>:</span><br><span class="line">  结果<span class="hljs-number">2</span></span><br></pre></td></tr></table></figure></li><li><p>条件循环语句<font color="#FF0055">while</font> <code>break可直接跳出循环</code> <code>continue可结束本次循环开始下一次循环</code> <code>循环的结束方式多样</code></p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">flag = <span class="hljs-keyword">True</span></span><br><span class="line">count = <span class="hljs-number">1</span></span><br><span class="line"><span class="hljs-keyword">while</span> flag:  <span class="hljs-comment">#可在此行直接判断</span></span><br><span class="line">  print(count)</span><br><span class="line">  count = count + <span class="hljs-number">1</span></span><br><span class="line">  <span class="hljs-keyword">if</span> count = <span class="hljs-number">101</span>:</span><br><span class="line">    flag = <span class="hljs-keyword">False</span> <span class="hljs-comment">#可在此处直接break</span></span><br></pre></td></tr></table></figure></li><li><p>while else的使用 <code>while如果被break打断则不运行else中内容</code></p><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">while</span> <span class="hljs-keyword">True</span>:</span><br><span class="line">  内容</span><br><span class="line"><span class="hljs-keyword">else</span>:</span><br><span class="line">  print(<span class="hljs-string">'内容执行完啦'</span>) <span class="hljs-comment">#如果内容中不含break，则运行本行</span></span><br></pre></td></tr></table></figure></li><li><p>写<code>while 1:</code>比写<code>while True:</code>效率高</p></li></ul><h2 id="编码格式"><a href="#编码格式" class="headerlink" title="编码格式"></a>编码格式</h2><ul><li><p>最初的计算机使用的<font color="#FF0055">ASCII</font>码有八位 第一位全为0 是制定者预留以便后续拓展</p></li><li><p>8位 <code>bit</code>=1字节 <code>byte</code><br>1024字节 <code>byte</code>=1千字节 <code>kb</code><br>1024千字节 <code>kb</code>=1兆字节 <code>MB</code><br>1024兆字节 <code>MB</code>=1千兆字节 <code>GB</code><br>1024千兆字节 <code>GB</code>=1百万兆字节 <code>TB</code></p></li><li><p>为了解决计算机全球化的问题 美国制定了<font color="#FF0055">unicode</font>来表示世界上的所有语言<br>在<font color="#FF0055">unicode</font>中一开始用1个字节表示所有的英文字母和符号 用4个字节表示所有的中文</p></li><li><p>后来因为用4个字节表示全部中文太浪费存储空间于是诞生了<font color="#FF0055">unicode</font>的升级版<font color="#FF0055">utf-8</font> 在<font color="#FF0055">utf-8</font>中3个字节即可以表示所有中文</p></li><li><p>还有一种编码<font color="#FF0055">GBK</font> 由中国人发明只能表示中文和英文以及符号 用2个字节表示中文 <code>GBK表示的中文不全</code></p></li><li><p><font color="#FF0055">utf-8</font>与<font color="#FF0055">GBK</font>的转化要通过<font color="#FF0055">unicode</font>来实现</p></li></ul><ul><li><p>基本运算符</p><ul><li><p>算数运算</p><p><img src="https://ws1.sinaimg.cn/large/005AdMUbgy1fwpivbbv4xj30l706kdgv.jpg" alt="算术运算"></p></li></ul></li></ul><!-- | 运算符   | 描述      | 实例   || :---: | :-------: | :----: || +        | 1600 USD  | 5      || -        | 12 USD    | 12     || *        | 1 USD     | 234    || *        | 1 USD     | 234    | --><ul><li><p>比较运算</p><p><img src="https://ws1.sinaimg.cn/large/005AdMUbgy1fwpivbcv02j30lj07o0tx.jpg" alt="比较运算"></p></li><li><p>赋值运算<br><img src="https://ws1.sinaimg.cn/large/005AdMUbgy1fwpivbbixjj30ld07lab1.jpg" alt="赋值运算"></p></li><li><p>逻辑运算<br><img src="https://ws1.sinaimg.cn/large/005AdMUbgy1fwpivbaxs4j30lb036q3e.jpg" alt="逻辑运算"><br>逻辑运算符优先级：<strong>( )&gt;not&gt;and&gt;or</strong></p></li><li><p>关于<font color="#FF0055">int</font>类型的两个数x,y<br>x为真，<strong>x or y</strong>值是x；x为假，<strong>x or y</strong>值是y<br>x为真，<strong>x and y</strong>值是y；x为假，<strong>x and y</strong>值是x</p></li><li>非0的<font color="#FF0055">int</font>转化成<font color="#FF0055">bool</font>为<font color="#FF0055">True</font>；为0的<font color="#FF0055">int</font>转化为<font color="#FF0055">bool</font>为<font color="#FF0055">False</font></li><li><font color="#FF0055">bool</font>的<font color="#FF0055">True</font>转化为<font color="#FF0055">int</font>是1；<font color="#FF0055">bool</font>的<font color="#FF0055">False</font>转化为<font color="#FF0055">int</font>是0</li></ul><h1 id="Python2与3的区别"><a href="#Python2与3的区别" class="headerlink" title="Python2与3的区别"></a><strong>Python2与3的区别</strong></h1><ol><li><p>Python2默认编码为<font color="#FF0055">ASCII</font>码  Python2默认编码为<font color="#FF0055">utf-8</font>所以python2遇到中文会报错</p><ul><li>解决方法：在文件开头加<code>#-*-encoding:utf-8-*-</code>    解决报错 但在cmd中运行中文&gt;依然乱码 因为cmd使用<font color="#FF0055">GBK</font>编码</li></ul></li><li><p>Python3不存在长整型与整型之分   全部为<font color="#FF0055">int</font></p></li></ol><blockquote><p>参考资料：<a href="http://www.cnblogs.com/jin-xin/articles/7459977.html" target="_blank" rel="noopener">老男孩导师太白金星的博客</a><br>&emsp;&emsp;&emsp;&emsp;&emsp;<a href="https://docs.python.org/zh-cn/3/" target="_blank" rel="noopener">Python文档</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/005AdMUbgy1fwmsjzu0h8j30sn0dsdgf.jpg&quot; alt=&quot;Python&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;笔记&quot;&gt;&lt;a href=&quot;#笔记&quot; class=&quot;headerlink
      
    
    </summary>
    
      <category term="学习" scheme="https://www.kokoda.xyz/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="学习笔记" scheme="https://www.kokoda.xyz/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
